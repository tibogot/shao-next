import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import localFont from "next/font/local";
import "./globals.css";
import CartDrawer from "../components/CartDrawer";
import Navbar from "../components/Navbar";
import LenisProvider from "../components/LenisProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const neueMontreal = localFont({
  src: [
    {
      path: "../fonts/PP Neue Montreal-Variable.ttf",
      style: "normal",
      weight: "100 900",
    },
  ],
  variable: "--font-neue-montreal",
  display: "swap",
});

const neueMontrealMono = localFont({
  src: [
    {
      path: "../fonts/PPNeueMontrealMono-Book.otf",
      style: "normal",
      weight: "400",
    },
  ],
  variable: "--font-neue-montreal-mono",
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        suppressHydrationWarning
        className={`${geistSans.variable} ${geistMono.variable} ${neueMontreal.variable} ${neueMontrealMono.variable} antialiased`}
      >
        <LenisProvider>
          <CartDrawer />
          <Navbar />
          {children}
        </LenisProvider>
      </body>
    </html>
  );
}
